{"ast":null,"code":"// 1\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\"; // 2\n\nconst GET_ITEMS = \"item/GET_ITEMS\";\nconst ADD_ITEM = \"item/ADD_ITEM\"; // 3\n\nconst initialState = {\n  items: []\n}; // 4\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_ITEMS:\n      return { ...state,\n        items: action.payload\n      };\n\n    case ADD_ITEM:\n      return { ...state,\n        users: action.payload\n      };\n\n    default:\n      return state;\n  }\n}); // 5\n\nfunction getItems() {\n  return dispatch => {\n    axios.get(\"/elements\").then(resp => {\n      dispatch({\n        type: GET_ITEMS,\n        payload: resp.data\n      });\n    });\n  };\n} // function addItem(name) {\n//   return dispatch => {\n//     axios.post(\"/items\", { name }).then(resp => {\n//       dispatch(getItems())\n//     })\n//   }\n// }\n\n\nfunction addItem(name) {\n  return {\n    type: ADD_ITEM,\n    payload: name\n  };\n} // 6\n\n\nexport function useItems() {\n  const dispatch = useDispatch();\n  const items = useSelector(appState => appState.itemState.items);\n\n  const add = item => dispatch(addItem(item));\n\n  useEffect(() => {\n    dispatch(getItems());\n  }, []);\n  return {\n    items,\n    add\n  };\n}","map":{"version":3,"sources":["/Users/punchcode/Desktop/Punchcode/Projects/to-do/src/redux/ducks/item/index.js"],"names":["axios","useEffect","useSelector","useDispatch","GET_ITEMS","ADD_ITEM","initialState","items","state","action","type","payload","users","getItems","dispatch","get","then","resp","data","addItem","name","useItems","appState","itemState","add","item"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,MAAMC,SAAS,GAAG,gBAAlB;AACA,MAAMC,QAAQ,GAAG,eAAjB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB,C,CAIA;;AACA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,SAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAA1B,OAAP;;AACF,SAAKN,QAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYI,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAA1B,OAAP;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD,E,CAWA;;AACA,SAASK,QAAT,GAAoB;AAClB,SAAOC,QAAQ,IAAI;AACjBd,IAAAA,KAAK,CAACe,GAAN,CAAU,WAAV,EAAuBC,IAAvB,CAA4BC,IAAI,IAAI;AAClCH,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAEN,SADC;AAEPO,QAAAA,OAAO,EAAEM,IAAI,CAACC;AAFP,OAAD,CAAR;AAID,KALD;AAMD,GAPD;AAQD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,SAAO;AACLV,IAAAA,IAAI,EAAEL,QADD;AAELM,IAAAA,OAAO,EAAES;AAFJ,GAAP;AAID,C,CAED;;;AACA,OAAO,SAASC,QAAT,GAAoB;AACzB,QAAMP,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMI,KAAK,GAAGL,WAAW,CAACoB,QAAQ,IAAIA,QAAQ,CAACC,SAAT,CAAmBhB,KAAhC,CAAzB;;AACA,QAAMiB,GAAG,GAAGC,IAAI,IAAIX,QAAQ,CAACK,OAAO,CAACM,IAAD,CAAR,CAA5B;;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAEN,IAAAA,KAAF;AAASiB,IAAAA;AAAT,GAAP;AACD","sourcesContent":["// 1\nimport axios from \"axios\"\nimport { useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\n// 2\nconst GET_ITEMS = \"item/GET_ITEMS\"\nconst ADD_ITEM = \"item/ADD_ITEM\"\n\n// 3\nconst initialState = {\n  items: []\n}\n\n// 4\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ITEMS:\n      return { ...state, items: action.payload }\n    case ADD_ITEM:\n      return { ...state, users: action.payload }\n    default:\n      return state\n  }\n}\n\n// 5\nfunction getItems() {\n  return dispatch => {\n    axios.get(\"/elements\").then(resp => {\n      dispatch({\n        type: GET_ITEMS,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n// function addItem(name) {\n//   return dispatch => {\n//     axios.post(\"/items\", { name }).then(resp => {\n//       dispatch(getItems())\n//     })\n//   }\n// }\n\nfunction addItem(name) {\n  return {\n    type: ADD_ITEM,\n    payload: name\n  }\n}\n\n// 6\nexport function useItems() {\n  const dispatch = useDispatch()\n  const items = useSelector(appState => appState.itemState.items)\n  const add = item => dispatch(addItem(item))\n\n  useEffect(() => {\n    dispatch(getItems())\n  }, [])\n\n  return { items, add }\n}\n"]},"metadata":{},"sourceType":"module"}